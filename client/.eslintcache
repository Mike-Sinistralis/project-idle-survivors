[{"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\auth\\components\\Login.jsx":"1","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\auth\\components\\UserDetailsObserver.jsx":"2","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\auth\\hooks\\useGetUserDetails.js":"3","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\auth\\hooks\\useLogin.js":"4","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\auth\\hooks\\useLogout.js":"5","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\auth\\hooks\\useRegister.js":"6","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\auth\\hooks\\useSessionKey.js":"7","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\common\\hooks\\usePrevious.js":"8","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\common\\theme\\root.jsx":"9","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\const\\queryClient.js":"10","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\errors\\ApiError.js":"11","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\entities\\player\\hooks\\usePlayer.js":"12","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\entities\\player\\Player.jsx":"13","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\entities\\slime\\Slime.jsx":"14","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\entities\\slime\\useSlime.js":"15","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\index.jsx":"16","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\managers\\hooks\\useTileEntityManager.js":"17","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\managers\\hooks\\useUserInput.js":"18","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\managers\\hooks\\useViewportOffset.js":"19","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\managers\\TileEntityManager.jsx":"20","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\managers\\UserInputManager.jsx":"21","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\sprites\\const\\renderCache.js":"22","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\sprites\\hooks\\useRenderable.js":"23","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\sprites\\settings\\Desert.jsx":"24","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\sprites\\settings\\Grassland.jsx":"25","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\sprites\\settings\\TiledWorld.jsx":"26","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\tiles\\const\\tileCache.js":"27","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\tiles\\hooks\\useTiles.js":"28","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\websocket\\index.js":"29","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\main.jsx":"30","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\root\\PrivateRoutes.jsx":"31","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\root\\Providers.jsx":"32","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\root\\PublicRoutes.jsx":"33","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\root\\Router.jsx":"34","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\util\\debounce.js":"35","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\util\\forms.js":"36","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\vite.config.js":"37"},{"size":2493,"mtime":1711391671105,"results":"38","hashOfConfig":"39"},{"size":282,"mtime":1711327730996,"results":"40","hashOfConfig":"39"},{"size":992,"mtime":1711408606604,"results":"41","hashOfConfig":"39"},{"size":1295,"mtime":1711394394147,"results":"42","hashOfConfig":"39"},{"size":1093,"mtime":1711395883815,"results":"43","hashOfConfig":"39"},{"size":1125,"mtime":1711394355828,"results":"44","hashOfConfig":"39"},{"size":430,"mtime":1711408038071,"results":"45","hashOfConfig":"39"},{"size":202,"mtime":1711224846611,"results":"46","hashOfConfig":"39"},{"size":194,"mtime":1711224846611,"results":"47","hashOfConfig":"39"},{"size":995,"mtime":1711409037617,"results":"48","hashOfConfig":"39"},{"size":276,"mtime":1711326063722,"results":"49","hashOfConfig":"39"},{"size":1322,"mtime":1711558246614,"results":"50","hashOfConfig":"39"},{"size":2621,"mtime":1711514253869,"results":"51","hashOfConfig":"39"},{"size":2752,"mtime":1711489169934,"results":"52","hashOfConfig":"39"},{"size":1947,"mtime":1711558253187,"results":"53","hashOfConfig":"39"},{"size":3076,"mtime":1711489193044,"results":"54","hashOfConfig":"39"},{"size":3640,"mtime":1711514035968,"results":"55","hashOfConfig":"39"},{"size":1401,"mtime":1711489187547,"results":"56","hashOfConfig":"39"},{"size":323,"mtime":1711482722145,"results":"57","hashOfConfig":"39"},{"size":3882,"mtime":1711514026429,"results":"58","hashOfConfig":"39"},{"size":176,"mtime":1711224846613,"results":"59","hashOfConfig":"39"},{"size":613,"mtime":1711224846613,"results":"60","hashOfConfig":"39"},{"size":1689,"mtime":1711484012045,"results":"61","hashOfConfig":"39"},{"size":1355,"mtime":1711224846396,"results":"62","hashOfConfig":"39"},{"size":1270,"mtime":1711224846614,"results":"63","hashOfConfig":"39"},{"size":1420,"mtime":1711224846614,"results":"64","hashOfConfig":"39"},{"size":251,"mtime":1711224846619,"results":"65","hashOfConfig":"39"},{"size":618,"mtime":1711224846616,"results":"66","hashOfConfig":"39"},{"size":529,"mtime":1711243586718,"results":"67","hashOfConfig":"39"},{"size":319,"mtime":1711556703630,"results":"68","hashOfConfig":"39"},{"size":719,"mtime":1711408775001,"results":"69","hashOfConfig":"39"},{"size":974,"mtime":1711325939215,"results":"70","hashOfConfig":"39"},{"size":406,"mtime":1711408443033,"results":"71","hashOfConfig":"39"},{"size":735,"mtime":1711408810087,"results":"72","hashOfConfig":"39"},{"size":383,"mtime":1711485189493,"results":"73","hashOfConfig":"39"},{"size":216,"mtime":1711328275931,"results":"74","hashOfConfig":"39"},{"size":604,"mtime":1711558038863,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17jbk8l",{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\auth\\components\\Login.jsx",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\auth\\components\\UserDetailsObserver.jsx",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\auth\\hooks\\useGetUserDetails.js",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\auth\\hooks\\useLogin.js",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\auth\\hooks\\useLogout.js",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\auth\\hooks\\useRegister.js",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\auth\\hooks\\useSessionKey.js",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\common\\hooks\\usePrevious.js",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\common\\theme\\root.jsx",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\const\\queryClient.js",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\errors\\ApiError.js",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\entities\\player\\hooks\\usePlayer.js",["154","155"],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\entities\\player\\Player.jsx",["156","157"],"import { AnimatedSprite, useTick } from '@pixi/react';\r\nimport { Texture, BaseTexture } from 'pixi.js';\r\nimport { useState } from 'react';\r\n\r\nimport { keyStore } from 'game/managers/hooks/useUserInput';\r\nimport PlayerSprite from 'assets/player.png';\r\nimport useRenderable, { RENDER_IDS } from 'game/sprites/hooks/useRenderable';\r\nimport { useViewportOffset } from 'game/managers/hooks/useViewportOffset';\r\nimport { useEntityManager } from 'game/managers/hooks/useTileEntityManager';\r\nimport { usePlayer } from './hooks/usePlayer';\r\n\r\nconst baseTexture = BaseTexture.from(PlayerSprite);\r\nconst frames = [];\r\nframes.push(new Texture(baseTexture));\r\n\r\nconst inputKeys = ['w', 'a', 's', 'd'];\r\n\r\nfunction Player({\r\n  stageWidth, stageHeight, ...props\r\n}) {\r\n  const { getPlayer } = useEntityManager();\r\n  const playerEntity = getPlayer();\r\n\r\n  usePlayer();\r\n\r\n  const { isPressed } = keyStore();\r\n\r\n  const {\r\n    textures,\r\n    spriteRef,\r\n    scale,\r\n    ...renderableProps\r\n  } = useRenderable({\r\n    renderId: RENDER_IDS.PLAYER,\r\n  });\r\n\r\n  const viewport = useViewportOffset();\r\n  const [customScale, setCustomScale] = useState({ x: scale.x, y: scale.y });\r\n\r\n  const {\r\n    position,\r\n    screenPosition,\r\n    direction,\r\n    speed,\r\n  } = playerEntity;\r\n\r\n  useTick(() => {\r\n    const normalDirection = { x: 0, y: 0 };\r\n\r\n    const inputMap = {\r\n      w: () => { normalDirection.y -= 1; },\r\n      a: () => { normalDirection.x -= 1; },\r\n      s: () => { normalDirection.y += 1; },\r\n      d: () => { normalDirection.x += 1; },\r\n    };\r\n\r\n    inputKeys.forEach((key) => {\r\n      if (isPressed(key)) {\r\n        inputMap[key]();\r\n      }\r\n    });\r\n\r\n    // allow for flipping the sprite\r\n    const updateScale = (newDirection) => {\r\n      if ((newDirection.x < 0 && customScale.x > 0) || (newDirection.x > 0 && customScale.x < 0)) {\r\n        setCustomScale({ x: -customScale.x, y: customScale.y });\r\n      }\r\n    };\r\n\r\n    updateScale(normalDirection);\r\n    playerEntity.direction = normalDirection;\r\n  });\r\n\r\n  useTick((delta) => {\r\n    if (!speed) return;\r\n\r\n    // Update position based on direction and delta time\r\n    const newPos = {\r\n      x: position.x + direction.x * speed * delta,\r\n      y: position.y + direction.y * speed * delta,\r\n    };\r\n\r\n    playerEntity.position = newPos;\r\n    viewport.setOffset(newPos);\r\n  });\r\n\r\n  if (textures.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <AnimatedSprite\r\n      ref={spriteRef}\r\n      textures={textures}\r\n      position={screenPosition}\r\n      scale={customScale}\r\n      {...renderableProps}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Player;\r\n","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\entities\\slime\\Slime.jsx",["158","159"],"import { AnimatedSprite, useTick } from '@pixi/react';\r\nimport {\r\n  useCallback, useEffect,\r\n} from 'react';\r\n\r\nimport { useSlime } from 'game/entities/slime/useSlime';\r\nimport { useViewportOffset } from 'game/managers/hooks/useViewportOffset';\r\nimport { useEntityManager } from 'game/managers/hooks/useTileEntityManager';\r\nimport useRenderable, { RENDER_IDS } from '../../sprites/hooks/useRenderable';\r\n\r\nconst offScreenMax = -80;\r\n\r\nfunction Slime({\r\n  id, stageWidth, stageHeight, ...props\r\n}) {\r\n  const { getEntity } = useEntityManager();\r\n  const slimeEntity = getEntity(id);\r\n  const { onSlow } = useSlime(id);\r\n\r\n  const { textures, spriteRef, ...renderableProps } = useRenderable({\r\n    renderId: RENDER_IDS.SLIME,\r\n  });\r\n\r\n  const viewport = useViewportOffset();\r\n\r\n  const {\r\n    position,\r\n    screenPosition,\r\n    direction,\r\n    speed,\r\n  } = slimeEntity;\r\n\r\n  const handleSlimeClick = useCallback(() => {\r\n    onSlow(1);\r\n  }, [onSlow]);\r\n\r\n  useEffect(() => {\r\n    const sprite = spriteRef.current;\r\n\r\n    if (sprite && textures.length > 0) {\r\n      sprite.on('pointertap', handleSlimeClick); // Add an event listener\r\n    }\r\n\r\n    return () => {\r\n      // Cleanup function\r\n      if (sprite) {\r\n        sprite.off('pointertap', handleSlimeClick); // Remove the event listener\r\n      }\r\n    };\r\n  }, [handleSlimeClick, spriteRef, textures]);\r\n\r\n  useTick((delta) => {\r\n    if (!speed) return;\r\n\r\n    // Update position based on direction and delta time\r\n    const newPos = {\r\n      x: position.x + direction.x * speed * delta,\r\n      y: position.y + direction.y * speed * delta,\r\n    };\r\n\r\n    const newScreenPos = {\r\n      x: (stageWidth / 2) - viewport.offset.x + position.x,\r\n      y: (stageHeight / 2) - viewport.offset.y + position.y,\r\n    };\r\n\r\n    let newDirection;\r\n\r\n    // Boundary checks and update direction if out of bounds\r\n    if ((newScreenPos.x < offScreenMax && direction.x < 0) || (newScreenPos.x > stageWidth && direction.x > 0)) {\r\n      newDirection = { x: -direction.x, y: direction.y };\r\n    }\r\n\r\n    if ((newScreenPos.y < offScreenMax && direction.y < 0) || (newScreenPos.y > stageHeight && direction.y > 0)) {\r\n      newDirection = { x: direction.x, y: -direction.y };\r\n    }\r\n\r\n    slimeEntity.position = newPos;\r\n    slimeEntity.screenPosition = newScreenPos;\r\n    slimeEntity.direction = newDirection || direction;\r\n  });\r\n\r\n  if (textures.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <AnimatedSprite\r\n      ref={spriteRef}\r\n      textures={textures}\r\n      position={screenPosition}\r\n      interactive // Make the sprite interactive\r\n      pointerdown={handleSlimeClick} // Add the click event listener\r\n      {...renderableProps}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Slime;\r\n","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\entities\\slime\\useSlime.js",["160","161"],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\index.jsx",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\managers\\hooks\\useTileEntityManager.js",["162","163"],"/* eslint-disable no-param-reassign */\r\nimport Player from 'game/entities/player/Player';\r\nimport Slime from 'game/entities/slime/Slime';\r\nimport { create } from 'zustand';\r\n\r\n// Function that generates sequential ID's that loop back around after reaching 100k\r\nfunction* generateId(limit = 1000000) {\r\n  let id = 0;\r\n  while (true) {\r\n    yield id;\r\n    id = (id + 1) % limit;\r\n  }\r\n}\r\n\r\nconst idGenerator = generateId();\r\n\r\n/*\r\n  React is heavily dependent on immutable data patterns, but we need the performance, so we use an incremental number to force\r\n  updates when certain things happen\r\n*/\r\nconst entityListVersion = generateId(1000);\r\nconst playerDataVersion = generateId(64);\r\nconst entityDataVersion = generateId(64);\r\n\r\nconst ENTITY_TYPES = {\r\n  SLIME: 'slime',\r\n  PLAYER: 'player',\r\n};\r\n\r\nconst ENTITY_COMPONENTS = {\r\n  slime: Slime,\r\n  player: Player,\r\n};\r\n\r\nconst useEntityManager = create((set, get) => ({\r\n  player: null,\r\n  entityList: new Map([]),\r\n  entityIds: new Set([]),\r\n  // This is used to force updates to components when entity lists change.\r\n  entityListVersion: 0,\r\n  playerDataVersion: 0,\r\n  entityDataVersion: 0,\r\n  registerPlayer: (entity = {}) => {\r\n    entity.type = ENTITY_TYPES.PLAYER;\r\n    entity.id = 'player';\r\n\r\n    set({ version: entityListVersion.next().value, player: entity });\r\n  },\r\n  registerEntity: (entityType, entity = {}) => {\r\n    /*\r\n    * Get's an ID from generateId, ensures it isn't currently used, then registers the entity with that ID and returns the ID back to the caller\r\n    */\r\n    let id = idGenerator.next().value;\r\n    const { entityList, entityIds } = get();\r\n\r\n    while (entityList.has(id)) {\r\n      id = idGenerator.next().value;\r\n    }\r\n\r\n    entity.type = entityType;\r\n    entity.id = id;\r\n\r\n    entityList.set(id, entity);\r\n    entityIds.add(id);\r\n\r\n    set({ version: entityListVersion.next().value });\r\n    return id;\r\n  },\r\n  registerEntities: (entities = []) => {\r\n    const { entityList, entityIds } = get();\r\n    const entityIdList = [];\r\n\r\n    entities.forEach(({ entityType, entity }) => {\r\n      /*\r\n      * Get's an ID from generateId, ensures it isn't currently used, then registers the entity with that ID and returns the ID back to the caller\r\n      */\r\n      let id = idGenerator.next().value;\r\n\r\n      while (entityList.has(id)) {\r\n        id = idGenerator.next().value;\r\n      }\r\n\r\n      entity.type = entityType;\r\n      entity.id = id;\r\n\r\n      entityIdList.push(id);\r\n      entityIds.add(id);\r\n\r\n      entityList.set(id, entity);\r\n    });\r\n\r\n    set({ version: entityListVersion.next().value });\r\n    return entityIdList;\r\n  },\r\n  getEntity: (id) => {\r\n    const { entityList } = get();\r\n\r\n    return entityList.get(id) || {};\r\n  },\r\n  getPlayer: () => {\r\n    const { player } = get();\r\n\r\n    return player;\r\n  },\r\n  unregisterPlayer: () => {\r\n    set({ version: entityListVersion.next().value, player: null });\r\n  },\r\n  unregisterEntity: (id) => {\r\n    const { entityList, entityIds } = get();\r\n\r\n    entityList.delete(id);\r\n    entityIds.delete(id);\r\n\r\n    set({ version: entityListVersion.next().value });\r\n  },\r\n  unregisterEntities: (ids) => {\r\n    const { entityList, entityIds } = get();\r\n\r\n    ids.forEach((id) => {\r\n      entityList.delete(id);\r\n      entityIds.delete(id);\r\n    });\r\n\r\n    set({ version: entityListVersion.next().value });\r\n  },\r\n  incrementPlayerDataVersion: () => {\r\n    set({ playerDataVersion: playerDataVersion.next().value });\r\n  },\r\n  incrementEntityDataVersion: () => {\r\n    set({ entityDataVersion: entityDataVersion.next().value });\r\n  },\r\n}));\r\n\r\nexport { useEntityManager, ENTITY_TYPES, ENTITY_COMPONENTS };\r\n","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\managers\\hooks\\useUserInput.js",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\managers\\hooks\\useViewportOffset.js",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\managers\\TileEntityManager.jsx",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\managers\\UserInputManager.jsx",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\sprites\\const\\renderCache.js",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\sprites\\hooks\\useRenderable.js",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\sprites\\settings\\Desert.jsx",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\sprites\\settings\\Grassland.jsx",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\sprites\\settings\\TiledWorld.jsx",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\tiles\\const\\tileCache.js",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\tiles\\hooks\\useTiles.js",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\game\\websocket\\index.js",["164","165"],"import { io } from 'socket.io-client';\r\n\r\nconst socket = io(`${import.meta.env.VITE_API_URL}`, {\r\n  reconnection: true,\r\n  reconnectionAttempts: 5,\r\n  reconnectionDelay: 1000,\r\n  reconnectionDelayMax: 5000, // Reconnecting tapers off, this is the max value it will taper off to\r\n  withCredentials: true,\r\n});\r\n\r\nsocket.on('connect', () => {\r\n  console.log('Connected to server');\r\n  socket.emit('connected', 'Hello from client');\r\n});\r\n\r\nsocket.on('serverMessage', (msg) => {\r\n  console.log(`Message from server: ${msg}`);\r\n});\r\n","C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\main.jsx",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\root\\PrivateRoutes.jsx",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\root\\Providers.jsx",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\root\\PublicRoutes.jsx",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\root\\Router.jsx",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\util\\debounce.js",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\src\\util\\forms.js",[],"C:\\Users\\mzimm\\Documents\\Projects\\project-idle-survivors\\client\\vite.config.js",[],{"ruleId":"166","severity":1,"message":"167","line":2,"column":1,"nodeType":"168","endLine":2,"endColumn":77},{"ruleId":"169","severity":1,"message":"170","line":11,"column":5,"nodeType":"171","messageId":"172","endLine":11,"endColumn":16},{"ruleId":"166","severity":1,"message":"173","line":9,"column":1,"nodeType":"168","endLine":9,"endColumn":77},{"ruleId":"166","severity":1,"message":"174","line":10,"column":1,"nodeType":"168","endLine":10,"endColumn":47},{"ruleId":"166","severity":1,"message":"174","line":6,"column":1,"nodeType":"168","endLine":6,"endColumn":57},{"ruleId":"166","severity":1,"message":"173","line":8,"column":1,"nodeType":"168","endLine":8,"endColumn":77},{"ruleId":"166","severity":1,"message":"175","line":2,"column":1,"nodeType":"168","endLine":2,"endColumn":77},{"ruleId":"169","severity":1,"message":"170","line":14,"column":5,"nodeType":"171","messageId":"172","endLine":14,"endColumn":16},{"ruleId":"166","severity":1,"message":"173","line":2,"column":1,"nodeType":"168","endLine":2,"endColumn":50},{"ruleId":"166","severity":1,"message":"173","line":3,"column":1,"nodeType":"168","endLine":3,"endColumn":47},{"ruleId":"169","severity":1,"message":"170","line":12,"column":3,"nodeType":"171","messageId":"172","endLine":12,"endColumn":14},{"ruleId":"169","severity":1,"message":"170","line":17,"column":3,"nodeType":"171","messageId":"172","endLine":17,"endColumn":14},"import/no-cycle","Dependency cycle via game/entities/player/Player:2","ImportDeclaration","no-console","Unexpected console statement.","MemberExpression","unexpected","Dependency cycle detected.","Dependency cycle via game/managers/hooks/useTileEntityManager:2","Dependency cycle via game/entities/slime/Slime:3"]